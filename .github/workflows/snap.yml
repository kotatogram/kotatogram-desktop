name: Snap.

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'kotatogram_changes.txt'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/snap.yml'
      - 'Telegram/build/**'
      - 'Telegram/Patches/**'
      - 'Telegram/Resources/uwp/**'
      - 'Telegram/Resources/winrc/**'
      - 'Telegram/SourceFiles/platform/win/**'
      - 'Telegram/SourceFiles/platform/mac/**'
      - 'Telegram/Telegram/**'
      - 'Telegram/configure.bat'
      - 'Telegram/Telegram.plist'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'kotatogram_changes.txt'
      - 'changelog.txt'
      - 'LEGAL'
      - 'LICENSE'
      - '.github/**'
      - '!.github/workflows/snap.yml'
      - 'Telegram/build/**'
      - 'Telegram/Patches/**'
      - 'Telegram/Resources/uwp/**'
      - 'Telegram/Resources/winrc/**'
      - 'Telegram/SourceFiles/platform/win/**'
      - 'Telegram/SourceFiles/platform/mac/**'
      - 'Telegram/Telegram/**'
      - 'Telegram/configure.bat'
      - 'Telegram/Telegram.plist'

jobs:

  linux:
    name: Ubuntu
    if: >
      !(github.event_name == 'push'
        && contains(github.event.head_commit.message, '[skip ci]'))
      && !(github.event_name == 'pull_request'
        && github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name)
    runs-on: ubuntu-latest

    env:
      UPLOAD_ARTIFACT: "false"

    steps:
      - name: Clone.
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: First set up.
        run: |
          sudo apt-get purge --autoremove lxd

          sudo snap install --classic snapcraft
          sudo snap install lxd

          # Workaround for snapcraft
          # See https://forum.snapcraft.io/t/13258
          sudo chown root:root /

          sudo usermod -aG lxd $USER

          sudo snap run lxd init --auto
          sudo snap run lxd waitready

      - name: Kotatogram Desktop snap build.
        run: sg lxd -c 'snap run snapcraft --use-lxd'

      - name: Move artifact.
        if: env.UPLOAD_ARTIFACT == 'true'
        run: |
          artifact_name=$(echo kotatogram-desktop_*.snap)
          echo "ARTIFACT_NAME=$artifact_name" >> $GITHUB_ENV

          mkdir artifact
          mv $artifact_name artifact

      - uses: actions/upload-artifact@master
        if: env.UPLOAD_ARTIFACT == 'true'
        name: Upload artifact.
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifact
